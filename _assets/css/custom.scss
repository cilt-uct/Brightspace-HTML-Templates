// Color palette generation
// Use defineColorHSL to generate an 11 shade palette for a color.
// @include defineColorHSL(colorname, hue, saturation, lightness)
// @param colorname
//      Type: string
//      expects a CSS custom property name
// @param hue
//      Type: integer
//      expects an integer 0-255
// @param saturation
//      Type: percentage
//      expects a percentage 0-100%
// @param lightness
//      Type: percentage
//      expects a percentage 0-100%
// @returns 11 CSS Custom Properties available in :root
//      named colorname-0 through colorname-10
//      The HSL you provide in the parameters will be in the
//      middle of the range at colorname-5.
// @returns 11 CSS Classes using colorname prefixed with sakai-colorize
//      These classes set the background-color to colorname and
//      set the color to a value which will always pass WCAG AA 
//      guidelines. Color will be selected from the following,
//      whichever first passes the contrast requirement.
//            colorname-1
//            colorname-9
//            white
//            black
//
// Example usage 
//      @include defineColorHSL(--myschool-gray, 214, 3%, 55%);
// Returns CSS Custom Properties on :root
@mixin defineColorHSL($color, $hue, $saturation, $lightness){

    // $j used in the tint/shade functions to lighten or darken the color
    $j: 10;
    // $i used to append numbers at the end of the color names
    $i: 7;
  
    @while $i > 0 {
      #{$color}--lighter-#{$i}: tint-color(hsl($hue, $saturation, $lightness), $j);
  
      .sakai-colorize#{$color}--lighter-#{$i} {
        color: color-contrast(
          tint-color(hsl($hue, $saturation, $lightness), $j),
          shade-color(hsl($hue, $saturation, $lightness), 8),
          tint-color(hsl($hue, $saturation, $lightness), 8)
        );
        background-color: tint-color(hsl($hue, $saturation, $lightness), $j);
      }
      $j: $j - 1.5;
      $i: $i - 1;
    }
  
    #{$color}: hsl($hue, $saturation, $lightness);
  
    .sakai-colorize#{$color} {
      color: color-contrast(
        hsl($hue, $saturation, $lightness),
        shade-color(hsl($hue, $saturation, $lightness), 8),
        tint-color(hsl($hue, $saturation, $lightness), 8)
      );
      background-color: hsl($hue, $saturation, $lightness);
    }
  
    $j: 1;
    $i: 1;
    @while $i < 8 {
      #{$color}--darker-#{$i}: shade-color(hsl($hue, $saturation, $lightness), $j);
  
      .sakai-colorize#{$color}--darker-#{$i} {
        color: color-contrast(
          shade-color(hsl($hue, $saturation, $lightness), $j),
          shade-color(hsl($hue, $saturation, $lightness), 8),
          tint-color(hsl($hue, $saturation, $lightness), 8)
        );
        background-color: shade-color(hsl($hue, $saturation, $lightness), $j);
      }
      $j: $j + 1.5;
      $i: $i + 1;
    }
  
  }
  
  // SASS Color contrast
  // See https://github.com/twbs/bootstrap/pull/30168 for reference
  
  // A list of pre-calculated numbers of pow(($value / 255 + .055) / 1.055, 2.4). (from 0 to 255)
  $_luminance-list: .0008 .001 .0011 .0013 .0015 .0017 .002 .0022 .0025 .0027 .003 .0033 .0037 .004 .0044 .0048 .0052 .0056 .006 .0065 .007 .0075 .008 .0086 .0091 .0097 .0103 .011 .0116 .0123 .013 .0137 .0144 .0152 .016 .0168 .0176 .0185 .0194 .0203 .0212 .0222 .0232 .0242 .0252 .0262 .0273 .0284 .0296 .0307 .0319 .0331 .0343 .0356 .0369 .0382 .0395 .0409 .0423 .0437 .0452 .0467 .0482 .0497 .0513 .0529 .0545 .0561 .0578 .0595 .0612 .063 .0648 .0666 .0685 .0704 .0723 .0742 .0762 .0782 .0802 .0823 .0844 .0865 .0887 .0908 .0931 .0953 .0976 .0999 .1022 .1046 .107 .1095 .1119 .1144 .117 .1195 .1221 .1248 .1274 .1301 .1329 .1356 .1384 .1413 .1441 .147 .15 .1529 .1559 .159 .162 .1651 .1683 .1714 .1746 .1779 .1812 .1845 .1878 .1912 .1946 .1981 .2016 .2051 .2086 .2122 .2159 .2195 .2232 .227 .2307 .2346 .2384 .2423 .2462 .2502 .2542 .2582 .2623 .2664 .2705 .2747 .2789 .2831 .2874 .2918 .2961 .3005 .305 .3095 .314 .3185 .3231 .3278 .3325 .3372 .3419 .3467 .3515 .3564 .3613 .3663 .3712 .3763 .3813 .3864 .3916 .3968 .402 .4072 .4125 .4179 .4233 .4287 .4342 .4397 .4452 .4508 .4564 .4621 .4678 .4735 .4793 .4851 .491 .4969 .5029 .5089 .5149 .521 .5271 .5333 .5395 .5457 .552 .5583 .5647 .5711 .5776 .5841 .5906 .5972 .6038 .6105 .6172 .624 .6308 .6376 .6445 .6514 .6584 .6654 .6724 .6795 .6867 .6939 .7011 .7084 .7157 .7231 .7305 .7379 .7454 .7529 .7605 .7682 .7758 .7835 .7913 .7991 .807 .8148 .8228 .8308 .8388 .8469 .855 .8632 .8714 .8796 .8879 .8963 .9047 .9131 .9216 .9301 .9387 .9473 .956 .9647 .9734 .9823 .9911 1;
  
  $white: #fff;
  $black: #000;
  
  @function color-contrast($background, $color-contrast-dark: $color-contrast-dark, $color-contrast-light: $color-contrast-light, $min-contrast-ratio: $min-contrast-ratio) {
    $foregrounds: $color-contrast-light, $color-contrast-dark, $white, $black;
    $max-ratio: 0;
    $max-ratio-color: null;
  
    @each $color in $foregrounds {
      $contrast-ratio: contrast-ratio($background, $color);
      @if $contrast-ratio > $min-contrast-ratio {
        @return $color;
      } @else if $contrast-ratio > $max-ratio {
        $max-ratio: $contrast-ratio;
        $max-ratio-color: $color;
      }
    }
  
    @warn "Found no color leading to #{$min-contrast-ratio}:1 contrast ratio against #{$background}â€¦";
  
    @return $max-ratio-color;
  }
  
  @function contrast-ratio($background, $foreground: $color-contrast-light) {
    $l1: luminance($background);
    $l2: luminance(opaque($background, $foreground));
  
    @return if($l1 > $l2, ($l1 + .05) / ($l2 + .05), ($l2 + .05) / ($l1 + .05));
  }
  
  // Return WCAG2.0 relative luminance
  // See https://www.w3.org/WAI/GL/wiki/Relative_luminance
  // See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
  @function luminance($color) {
    $rgb: (
      "r": red($color),
      "g": green($color),
      "b": blue($color)
    );
  
    @each $name, $value in $rgb {
      $value: if($value / 255 < .03928, $value / 255 / 12.92, nth($_luminance-list, $value + 1));
      $rgb: map-merge($rgb, ($name: $value));
    }
  
    @return (map-get($rgb, "r") * .2126) + (map-get($rgb, "g") * .7152) + (map-get($rgb, "b") * .0722);
  }
  
  // Return opaque color
  // opaque(#fff, rgba(0, 0, 0, .5)) => #808080
  @function opaque($background, $foreground) {
    @return mix(rgba($foreground, 1), $background, opacity($foreground) * 100);
  }
  
  // Request a color level
  @function color-level($color: $primary, $level: 0) {
    $color-base: if($level > 0, $black, $white);
    $level: abs($level);
  
    @return mix($color-base, $color, $level * $theme-color-interval);
  }
  
  // Lighten a color
  @function tint-color($color, $level) {
      @return mix(white, $color, $level * $theme-color-interval);
  }
  
  // Darken a color
  @function shade-color($color, $level) {
      @return mix(black, $color, $level * $theme-color-interval);
  }
  
// The contrast ratio to reach against white, to determine if color changes from "light" to "dark". Acceptable values for WCAG 2.0 are 3, 4.5 and 7.
// See https://www.w3.org/TR/WCAG20/#visual-audio-contrast-contrast
$min-contrast-ratio:   4.5 !default;
// Set a specific jump point for requesting color jumps
$theme-color-interval: 9 !default;
  
/* Base theme */
:root {
    --sakai-theme-color-interval: 9;
    --sakai-color-contrast-threshold: 60%;
    --sakai-theme-switch-ease: background-color 0.6s cubic-bezier(0.76, 0, 0.24, 1);

    --sakai-color-white: hsl(0, 0%, 100%);
    --sakai-color-black: hsl(0, 0%, 0%);

    @include defineColorHSL(--sakai-brand, 225, 50%, 26%);


    --sakai-primary-color-1: var(--sakai-brand);
    --sakai-primary-color-2: var(--sakai-brand--darker-2);
    --sakai-primary-color-3: var(--sakai-brand--darker-3);
    --sakai-active-color-1: var(--sakai-brand--lighter-6);
    --sakai-active-color-2: var(--sakai-brand--lighter-5);
    --sakai-active-color-3: var(--sakai-brand--lighter-4);
    --sakai-passive-color-1: var(--sakai-color-gray--lighter-6);
    --sakai-passive-color-2: var(--sakai-color-gray--lighter-5);
    --sakai-passive-color-3: var(--sakai-color-gray--lighter-4);
    --sakai-background-color-1: var(--sakai-color-white);
    --sakai-background-color-2: var(--sakai-color-gray--lighter-7);
    --sakai-background-color-3: var(--sakai-color-gray--lighter-6);
    --sakai-background-color-4: var(--sakai-color-gray--lighter-5);
    --sakai-secondary-color-1: var(--sakai-color-blue--darker-2);
    --sakai-tertiary-color-1: var(--sakai-color-orange--darker-4);
    --sakai-border-color: var(--sakai-color-gray--lighter-6);
    --sakai-text-color-1: var(--sakai-color-gray--darker-5);
    --sakai-text-color-2: var(--sakai-color-gray--darker-6);
    --sakai-text-color-3: var(--sakai-brand--darker-3);
    --sakai-text-color-dimmed: var(--sakai-color-gray--darker-4);
    --sakai-text-color-disabled: var(--sakai-color-gray--darker-2);
    --sakai-text-color-inverted: var(--sakai-background-color-1);

    --sakai-color-gray--lighter-7: #f3f4f4;
    --sakai-color-gray--lighter-6: #e3e4e5;
    --sakai-color-gray--lighter-5: #d3d4d6;
    --sakai-color-gray--lighter-4: #c3c5c7;
    --sakai-color-gray--lighter-3: #b3b5b8;
    --sakai-color-gray--lighter-2: #a4a6a9;
    --sakai-color-gray--lighter-1: #94969a;
    --sakai-color-gray: #898c90;
    --sakai-color-gray--darker-1: #7d7f83;
    --sakai-color-gray--darker-2: #6a6d70;
    --sakai-color-gray--darker-3: #585a5c;
    --sakai-color-gray--darker-4: #454749;
    --sakai-color-gray--darker-5: #333435;
    --sakai-color-gray--darker-6: #202122;
    --sakai-color-gray--darker-7: #0e0e0e;
    --sakai-color-blue--lighter-7: #eaf5fc;
    --sakai-color-blue--lighter-6: #cce7f8;
    --sakai-color-blue--lighter-5: #afdaf4;
    --sakai-color-blue--lighter-4: #92ccf0;
    --sakai-color-blue--lighter-3: #75beec;
    --sakai-color-blue--lighter-2: #58b1e9;
    --sakai-color-blue--lighter-1: #3ba3e5;
    --sakai-color-blue: #289ae2;
    --sakai-color-blue--darker-1: #248cce;
    --sakai-color-blue--darker-2: #1f77af;
    --sakai-color-blue--darker-3: #1a6391;
    --sakai-color-blue--darker-4: #144e72;
    --sakai-color-blue--darker-5: #0f3954;
    --sakai-color-blue--darker-6: #092435;
    --sakai-color-blue--darker-7: #040f17;
    --sakai-color-teal--lighter-7: #e6f5f5;
    --sakai-color-teal--lighter-6: #c3e7e7;
    --sakai-color-teal--lighter-5: #a1d9d9;
    --sakai-color-teal--lighter-4: #7ecbcb;
    --sakai-color-teal--lighter-3: #5cbebe;
    --sakai-color-teal--lighter-2: #39b0b0;
    --sakai-color-teal--lighter-1: #17a2a2;
    --sakai-color-teal: #009999;
    --sakai-color-teal--darker-1: darkcyan;
    --sakai-color-teal--darker-2: #007777;
    --sakai-color-teal--darker-3: #006262;
    --sakai-color-teal--darker-4: #004d4d;
    --sakai-color-teal--darker-5: #003939;
    --sakai-color-teal--darker-6: #002424;
    --sakai-color-teal--darker-7: #000f0f;
    --sakai-color-gold--lighter-7: #fbf8e6;
    --sakai-color-gold--lighter-6: #f6eec3;
    --sakai-color-gold--lighter-5: #f1e4a1;
    --sakai-color-gold--lighter-4: #ecda7f;
    --sakai-color-gold--lighter-3: #e7d05c;
    --sakai-color-gold--lighter-2: #e2c63a;
    --sakai-color-gold--lighter-1: #ddbd18;
    --sakai-color-gold: #dab601;
    --sakai-color-gold--darker-1: #c6a601;
    --sakai-color-gold--darker-2: #a98d01;
    --sakai-color-gold--darker-3: #8c7401;
    --sakai-color-gold--darker-4: #6e5c01;
    --sakai-color-gold--darker-5: #514300;
    --sakai-color-gold--darker-6: #332b00;
    --sakai-color-gold--darker-7: #161200;
    --sakai-color-green--lighter-7: #e6f6ed;
    --sakai-color-green--lighter-6: #c5ead6;
    --sakai-color-green--lighter-5: #a3debe;
    --sakai-color-green--lighter-4: #82d2a6;
    --sakai-color-green--lighter-3: #60c68e;
    --sakai-color-green--lighter-2: #3fba77;
    --sakai-color-green--lighter-1: #1dae5f;
    --sakai-color-green: #07a64f;
    --sakai-color-green--darker-1: #069748;
    --sakai-color-green--darker-2: #05813d;
    --sakai-color-green--darker-3: #046a33;
    --sakai-color-green--darker-4: #045428;
    --sakai-color-green--darker-5: #033d1d;
    --sakai-color-green--darker-6: #022713;
    --sakai-color-green--darker-7: #011108;
    --sakai-color-orange--lighter-7: #fbf1e6;
    --sakai-color-orange--lighter-6: #f6ddc5;
    --sakai-color-orange--lighter-5: #f1caa4;
    --sakai-color-orange--lighter-4: #ecb782;
    --sakai-color-orange--lighter-3: #e7a361;
    --sakai-color-orange--lighter-2: #e29040;
    --sakai-color-orange--lighter-1: #dc7d1e;
    --sakai-color-orange: #d97008;
    --sakai-color-orange--darker-1: #c56607;
    --sakai-color-orange--darker-2: #a85706;
    --sakai-color-orange--darker-3: #8b4805;
    --sakai-color-orange--darker-4: #6e3904;
    --sakai-color-orange--darker-5: #502903;
    --sakai-color-orange--darker-6: #331a02;
    --sakai-color-orange--darker-7: #160b01;
    --sakai-color-purple--lighter-7: #ededfe;
    --sakai-color-purple--lighter-6: #d4d4fe;
    --sakai-color-purple--lighter-5: #bbbbfd;
    --sakai-color-purple--lighter-4: #a3a3fc;
    --sakai-color-purple--lighter-3: #8a8afb;
    --sakai-color-purple--lighter-2: #7171fa;
    --sakai-color-purple--lighter-1: #5858fa;
    --sakai-color-purple: #4848f9;
    --sakai-color-purple--darker-1: #4242e3;
    --sakai-color-purple--darker-2: #3838c1;
    --sakai-color-purple--darker-3: #2e2e9f;
    --sakai-color-purple--darker-4: #24247e;
    --sakai-color-purple--darker-5: #1b1b5c;
    --sakai-color-purple--darker-6: #11113b;
    --sakai-color-purple--darker-7: #070719;
    --sakai-color-red--lighter-7: #fae6e7;
    --sakai-color-red--lighter-6: #f3c3c5;
    --sakai-color-red--lighter-5: #eca1a4;
    --sakai-color-red--lighter-4: #e57e83;
    --sakai-color-red--lighter-3: #de5c62;
    --sakai-color-red--lighter-2: #d73941;
    --sakai-color-red--lighter-1: #d11720;
    --sakai-color-red: #cc000a;
    --sakai-color-red--darker-1: #ba0009;
    --sakai-color-red--darker-2: #9e0008;
    --sakai-color-red--darker-3: #830006;
    --sakai-color-red--darker-4: #670005;
    --sakai-color-red--darker-5: #4b0004;
    --sakai-color-red--darker-6: #300002;
    --sakai-color-red--darker-7: #140001;
    --sakai-lessons-navy--lighter-7: #e6eaf0;
    --sakai-lessons-navy--lighter-6: #c3cddb;
    --sakai-lessons-navy--lighter-5: #a1b1c6;
    --sakai-lessons-navy--lighter-4: #7e94b2;
    --sakai-lessons-navy--lighter-3: #5c789d;
    --sakai-lessons-navy--lighter-2: #395b88;
    --sakai-lessons-navy--lighter-1: #173f74;
    --sakai-lessons-navy: #002c66;
    --sakai-lessons-navy--darker-1: #00285d;
    --sakai-lessons-navy--darker-2: #00224f;
    --sakai-lessons-navy--darker-3: #001c41;
    --sakai-lessons-navy--darker-4: #001634;
    --sakai-lessons-navy--darker-5: #001026;
    --sakai-lessons-navy--darker-6: #000a18;
    --sakai-lessons-navy--darker-7: #00040a;    

    --infoBanner-bordercolor: var(--sakai-color-blue--lighter-2);
    --infoBanner-bgcolor: var(--sakai-color-blue--lighter-7);
    --infoBanner-color: var(--sakai-color-blue--darker-3);
    --successBanner-bordercolor: var(--sakai-color-green--lighter-2);
    --successBanner-bgcolor: var(--sakai-color-green--lighter-7);
    --successBanner-color: var(--sakai-color-green--darker-3);
    --warnBanner-bordercolor: var(--sakai-color-gold--lighter-2);
    --warnBanner-bgcolor: var(--sakai-color-gold--lighter-7);
    --warnBanner-color: var(--sakai-color-gold--darker-4);
    --errorBanner-bordercolor: var(--sakai-color-red--lighter-2);
    --errorBanner-bgcolor: var(--sakai-color-red--lighter-7);
    --errorBanner-color: var(--sakai-color-red--darker-2);
}

@media (min-width: 576px) {
    .container-fluid {
        .row {
            .col-sm-10 {
                //-ms-flex: 0 0 89.333333%;
                flex: 0 0 89.333333%;
                max-width: 89.333333%;
                
                &.offset-sm-1 {
                    margin-left: 5.333333%;
                }
            }
        }
    }
}


h1, h2, h3, h4, h5, h6 {
    color: var(--sakai-primary-color-1);
  

    & > span.fas, & > span.fa {
        position: relative;
        padding-right: 0.4em;
    }
}

h1 {
    &.lessontitle {
        color: var(--sakai-primary-color-1);
        text-align: center;
    }
}

h2 {
    margin-top: 2.75rem;
    margin-bottom: 1.2rem;

    &.sectionheader {
        color: var(--sakai-primary-color-1);
        background-color: var(--sakai-color-gray--lighter-7);
        text-align: left;
        padding: 0.4em;
        font-size: 24px;
    }

    & > span > img {
        display: inline-block;
        width: 64px;
        height: 64px;
        position: relative;
        top: -8px;
        margin-right:5px;
    }
}

h4, h5, h6 {
    color: var(--sakai-color-gray--darker-4);
    text-align: left;
}

table {
    font-size: 94%;

    &.table-bordered {
        border: 1px solid var(--sakai-border-color); 

        th, td {
            border: 1px solid #ddd !important;
        }
    }
}

.table-bordered > thead > tr > th,
.table-bordered > thead > tr > td,
.table-bordered > tbody > tr > th,
.table-bordered > tbody > tr > td,
.table-bordered > tfoot > tr > th,
.table-bordered > tfoot > tr > td {
    border: 1px solid var(--sakai-border-color); 
}
.table-bordered > thead > tr > th,
.table-bordered > thead > tr > td {
    border-bottom-width: 2px; 
}
  
.table-striped > tbody > tr:nth-of-type(odd) {
    background-color: var(--sakai-background-color-2); 
}

$img_size: 100px;

*.insight-section {
 
    ul {
        padding: 0.0px; 
        li { 
            list-style: none; 
            margin-top: 10.0px; 
        } 
    }

    *.left-insight, *.right-insight {
        overflow: hidden;
        position: relative; 


        img { 
            width: $img_size; 
            height: $img_size; 
            float: left; 
            margin: 0.0px 5.0px; 
            border-radius: 50.0%; 
            border: 3px solid #0099FF;
            padding: 4px;
            border-bottom: 4px solid #223264 !important;
            border-left: 4px solid #223264 !important;
        }

        p {
            background-color: var(--sakai-primary-color-1);
            color: var(--sakai-color-white);
            padding: 15.0px; 
            border-radius: 8.0px;
          /*  box-shadow: 4px 4px 0 rgb(0 0 0 / 20%); */
            float: left; 
            width: 75.0%; 
           line-height: 1.3;
            margin-bottom: 20.0px; 
            margin-left: 0.0px; 
            margin-top: 0px;
            position: relative;
     
            border-bottom: 4px solid #0099FF;
        }
    }

    *.left-insight {
        &:before {
            content: " ";
            position: absolute;
            top: 0px;
            left: calc($img_size - 4px);
            border: 15px solid transparent;
            border-top-color: var(--sakai-primary-color-1);
            z-index: 100;
        }
    }

    *.right-insight {
        img { 
            float: right; 
        }

        p { 
            float: right; 
            background-color: var(--sakai-color-gray--lighter-5);
            color: var(--sakai-color-gray--darker-6); 
            margin-right: 2.0px; 
        }

        &:before {
            content: " ";
            position: absolute;
            top: 0px;
            right: calc($img_size - 4px);
            border: 15px solid transparent;
            border-top-color: var(--sakai-color-gray--lighter-5);
            z-index: 100;
        }
    }
}

@media screen and (max-width: 768px) {
    *.insight-section {    
        *.left-insight, *.right-insight {
            &:before {
                display: none;
            }

            img { 
                margin-bottom:10px;
            }

            p {
                font-size: 0.941rem;
                line-height: 1.1rem;
            }
        }
    }
}

*.panel-insight-speaker {
    display: block;
    max-width: 94px;
    max-height: 94px;
    width: auto;
    height: auto;
    margin-right: 10.0px;
    float: left;
}

*.panel-insight-title {
    margin: 0 0 0 0;
}

.alert {
    font-size: 1rem;

    div:first-child > span > img, .star img{
        width: 35px;
        display: inline-block;
        position: relative;
        margin-right: 6px;
        top: -4px;
    }
}

.alert-info {

    div:first-child > span > img, .lightbulb img { 
        width: 40px;
        position: relative;
        display: block;
        margin-right: 10px;
        top: -20px;
        left: -5px;
    }

    .fa-2x.fa-lightbulb {
        position: relative;
        top: -5px;
    }
}


h3.callout-title {
    margin-top: 0px;
}

.panel {
    margin-bottom: 20px;
    border-top-right-radius: 3px;
    border-top-left-radius: 3px;

    .panel-heading {
        padding: 10px 15px;
        border-bottom: 1px solid transparent;
    
        h3 { 
            font-size: 18px;
            margin: 0px;
            text-align: left;
        }
    }

    .panel-body {
        padding: 15px;
    }

    h3.callout-title {
        span > img {
            width: 35px;
            display: inline-block;
            position: relative;
            margin-right: 6px;
            top: -4px;
        }
    }
}

.panel-danger {   
    .fa-exclamation-triangle, .contentReviewIconWarn {
        font-size: 1.6em;
        position: relative;
        top: 4px;
        padding-right: 6px;
    }

    h3.callout-title {
        span > img {
            width: 35px;
            display: inline-block;
            position: relative;
            margin-right: 6px;
            top: -4px;
        }
    }
}

@mixin definePanel($name, $border, $background, $header-color, $body-color) {
    .panel-#{$name} {
        border: 1px solid $border;

        & > .panel-heading {
            p {
                margin: 0;
            }
        }

        & > .panel-heading,  & > .pager-instruction {
            color: $body-color;
            background-color: $background;
        }
        
        & > .panel-heading + .panel-collapse > .panel-body,  
        & > .pager-instruction + .panel-collapse > .panel-body {
            border-top: 1px solid $border;
        }
        
        & > .panel-heading .badge,  & > .pager-instruction .badge {
            color: $border;
            background-color: $body-color; 
        }
        
        & > .panel-footer + .panel-collapse > .panel-body {
          border-bottom-color: $border; 
        }
    
        .panel-heading h3, .panel-heading p {
            color: $header-color;
        }
    }
}


@include definePanel('primary', #337ab7, #337ab7, var(--sakai-color-white), var(--sakai-text-color-1));
@include definePanel('success', #d6e9c6, #dff0d8, #3c763d, var(--sakai-text-color-1));
@include definePanel('info', #bce8f1, #d9edf7, #31708f, var(--sakai-text-color-1));
@include definePanel('warning', #faebcc, #fcf8e3, #8a6d3b, var(--sakai-text-color-1));
@include definePanel('danger', var(--errorBanner-bordercolor), var(--errorBanner-bgcolor), var(--errorBanner-color), var(--sakai-text-color-1));     

blockquote {
	border-left: 2px solid #000000;
	padding-left: 1.25rem;
}


.biotron {
    background-color:  #2b3463; 
      border-left: 10px solid #0099FF ;
           padding: 1rem;
      color: #FFFFFF;
      margin: 1.5rem 0;
           border-radius:0 
       }


       .biotron img {

width: 40px;
margin-top:5px;
       }

       .biotron p {

        margin-bottom:0px;
       }
  
// Code to change the width of the module intro 

//        .col-12 ~ .offset-md-2 {
//     margin-left: 5.333333%;
  
//  }

//  .col-12 ~ .col-md-8 {
//  flex: 0 0 89.333333%;
//  max-width: 89.333333%;
//  }